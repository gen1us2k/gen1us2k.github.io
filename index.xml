<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gen1us2k</title>
    <link>http://gen1us2k.github.io/</link>
    <description>Recent content on Gen1us2k</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>My Name</copyright>
    <lastBuildDate>Thu, 31 Mar 2016 17:58:02 +0600</lastBuildDate>
    <atom:link href="http://gen1us2k.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>domains</title>
      <link>http://gen1us2k.github.io/2016/03/31/domains/</link>
      <pubDate>Thu, 31 Mar 2016 17:58:02 +0600</pubDate>
      
      <guid>http://gen1us2k.github.io/2016/03/31/domains/</guid>
      <description>

&lt;h3 id=&#34;как-мы-домены-мониторили:ab1b71fc907eef6a6ae61cecfc19728a&#34;&gt;Как мы домены мониторили&lt;/h3&gt;
</description>
    </item>
    
    <item>
      <title>intro</title>
      <link>http://gen1us2k.github.io/2016/03/31/intro/</link>
      <pubDate>Thu, 31 Mar 2016 15:23:31 +0600</pubDate>
      
      <guid>http://gen1us2k.github.io/2016/03/31/intro/</guid>
      <description>

&lt;h1 id=&#34;используем-git-в-качестве-инструмента-для-деплоя-веб-приложения:34c4da6d4768d05e50db99357a299b5c&#34;&gt;Используем Git в качестве инструмента для деплоя веб приложения&lt;/h1&gt;

&lt;h3 id=&#34;что-имеем:34c4da6d4768d05e50db99357a299b5c&#34;&gt;Что имеем&lt;/h3&gt;

&lt;p&gt;У нас есть веб приложение, которое мы разрабатываем. Нам нужно быстро и легко добавлять изменения на продакшн&lt;/p&gt;

&lt;h4 id=&#34;что-предлагает-нам-git:34c4da6d4768d05e50db99357a299b5c&#34;&gt;Что предлагает нам Git&lt;/h4&gt;

&lt;p&gt;post-merge — Этот хук вызывается ‘git-merge’, после того, как мы выполнили &amp;lsquo;git-pull’ или &amp;lsquo;git-merge’ на локальном репозитории. Хук не выполнится, если у нас будут конфликты при мердже.
post-checkout — Этот хук вызывается &amp;lsquo;git-checkout’, после того, как мы выполним &amp;lsquo;git-clone’ или &amp;lsquo;git-checkout’.&lt;/p&gt;

&lt;h4 id=&#34;что-делаем:34c4da6d4768d05e50db99357a299b5c&#34;&gt;Что делаем&lt;/h4&gt;

&lt;p&gt;Механизм деплоя будет примерно таким:
1. Поднимаем git сервер. Переводим всю разработку на git. Протестированный код заливаем в репозиторий
2. Пишем хуки, которые будут делать то, что нам нужно сделать после деплоя. В данном случае хук post-merge.
3. Если хотим развернуть рабочую конфигурацию на чистом сервере, то пишем хук post-checkout&lt;/p&gt;

&lt;h4 id=&#34;к-примеру-нам-после-деплоя-надо-почистить-какую-то-папку-и-перезагрузить-апач:34c4da6d4768d05e50db99357a299b5c&#34;&gt;К примеру, нам после деплоя надо почистить какую-то папку и перезагрузить апач.&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash /etc/init.d/apache2 stop find /path/to/folder -type f -delete /etc/init.d/apache2 start
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Положим этот скрипт в .git/hooks/post-merge.
Выполняем git pull и у нас выполняется этот скрипт&lt;/p&gt;

&lt;p&gt;Аналогично и для хука post-checkout&lt;/p&gt;

&lt;p&gt;Плюсы:&lt;/p&gt;

&lt;p&gt;Быстрая доставка изменений на продакшн.
Автоматизация
Централизированное хранение рабочего веб проекта&lt;/p&gt;

&lt;p&gt;Минусы:&lt;/p&gt;

&lt;p&gt;Данная схема не будет работать, если мы будем создавать новые ветки, путем git checkout -b newBranch
Данная схема не будет работать, если мы будем вручную мерджить изменения в локальном хранилище.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>