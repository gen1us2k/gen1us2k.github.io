<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Monitoring on Gen1us2k</title>
    <link>http://gen1us2k.com/tags/monitoring/</link>
    <description>Recent content in Monitoring on Gen1us2k</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Gen1us2k</copyright>
    <lastBuildDate>Thu, 31 Mar 2016 17:58:02 +0600</lastBuildDate>
    <atom:link href="http://gen1us2k.com/tags/monitoring/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Как мы домены мониторили</title>
      <link>http://gen1us2k.com/2016/03/31/domains/</link>
      <pubDate>Thu, 31 Mar 2016 17:58:02 +0600</pubDate>
      
      <guid>http://gen1us2k.com/2016/03/31/domains/</guid>
      <description>

&lt;p&gt;Всем привет! Все началось с того, что у нас в компании развелось очень много доменов которые нужно вовремя продлевать. И вот, после одного провала с продлением доменов, было принято решение начать мониторить дату истечения домена и выводить его в мониторинге Nagios.&lt;/p&gt;

&lt;h4 id=&#34;как-мониторить:ab1b71fc907eef6a6ae61cecfc19728a&#34;&gt;Как мониторить?&lt;/h4&gt;

&lt;p&gt;У нас было несколько доменов в зонах kz, ru, kg, ge, com.&lt;/p&gt;

&lt;p&gt;Самый простой способ узнать всю нужную информацию о домене — запустить whois. Это по идее должен знать каждый. Но как все это дело внедрить в мониторинг?&lt;/p&gt;

&lt;h4 id=&#34;чем-мониторить:ab1b71fc907eef6a6ae61cecfc19728a&#34;&gt;Чем мониторить?&lt;/h4&gt;

&lt;p&gt;Покопавшись по просторам интернета, был найден модуль &lt;a href=&#34;https://pypi.python.org/pypi/python-whois&#34;&gt;python-whois&lt;/a&gt;.
Он хорошо выполнял свою работу для доменов com, net и кучи других доменов, описанных в описании к модулю.&lt;/p&gt;

&lt;p&gt;Не хватало функционала для нескольких доменов в зонах kg.&lt;/p&gt;

&lt;p&gt;В итоге появился форк проекта &lt;a href=&#34;https://github.com/gen1us2k/python-whois&#34;&gt;python-whois-extended&lt;/a&gt;, который расширяет функционал для больших TLD.&lt;/p&gt;

&lt;p&gt;Ок, как внедрить в нагиос?&lt;/p&gt;

&lt;p&gt;Все просто, пишем простой чек&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/usr/bin/env python#
# Usage:
# python check_domain.py -d DOMAIN
import whois
from datetime import datetime

from sys import exit
from optparse import OptionParser


def check_domain(domain):
    q = whois.query(domain)
    if (q.expiration_date - datetime.now()).days &amp;lt;= 30:
        print &amp;quot;CRITICAL: Domain: {0} expires on {1}&amp;quot;.format(domain, q.expiration_date)
        exit(2)
    print &amp;quot;OK: Domain: {0} expires on {1}&amp;quot;.format(domain, q.expiration_date)

if __name__ == &#39;__main__&#39;:
    parser = OptionParser()
    parser.add_option(&amp;quot;-d&amp;quot;, &amp;quot;--domain&amp;quot;, dest=&amp;quot;domain&amp;quot;, help=&amp;quot;Domain to monitor expiry date&amp;quot;)
    (options, args) = parser.parse_args()
    if not options.domain:
        print parser.print_help()
        exit(0)

    check_domain(options.domain)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Что он делает? Светит красным в мониторинге за месяц до истечения домена.&lt;/p&gt;

&lt;p&gt;Что интересно, появился еще один мейнтейнер, который добавил поддержку для hk, cn и kr TLD.&lt;/p&gt;

&lt;p&gt;Текущий список поддерживаемых доменов такой:&lt;/p&gt;

&lt;p&gt;com, net, org, uk, pl, ru, lv, jp, co_jp, de, at, eu, biz, info, name, us, co, me, be, nz, cz, it, fr, kg, vc, fm, tv, edu, ca, cn, kr, hk&lt;/p&gt;

&lt;p&gt;Пул-реквесты, запросы фич привествуются!&lt;/p&gt;

&lt;p&gt;Надеюсь, мой опыт поможет избавиться от подобной проблемы&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>